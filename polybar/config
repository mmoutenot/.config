
[bar/top]
dpi=220
width = 100%
height = 40

background = #00000000
foreground = #ccffffff

line-color = #00000000

; override-redirect = true
tray-offset-y = -3
tray-maxsize = 1000
tray-position = right
tray-padding = 4

padding-right = 4
padding-left = 4
module-margin= 2

font-0 = NotoSans-Regular:size=10;
font-1 = unifont:size=10;
font-2 = FontAwesome:size=12;

modules-left = i3 spotify
modules-center = date
modules-right = battery cpu memory volume powermenu 


[module/i3]
type = internal/i3

ws-icon-0 = 1; 
ws-icon-1 = 2; 
ws-icon-2 = 3; 
ws-icon-4 = 10; 
ws-icon-default = 

format = <label-state> <label-mode>

label-dimmed-underline = ${BAR.background}

index-sort = true
wrapping-scroll = false

workspace-label = %index%: %icon%

label-focused = ${self.workspace-label}
label-focused-padding = 1

label-unfocused = ${self.workspace-label}
label-unfocused-padding = 1
label-unfocused-foreground = #555555

label-urgent = ${self.workspace-label}
label-urgent-padding = 1

label-visible = ${self.workspace-label}
label-visible-padding = 1
label-visible-foregroud = #888888

[module/temperature]
type = internal/temperature
interval = 10

; Thermal zone to use
; To list all the zone types, run 
; $ for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
; Default: 0
thermal-zone = 0

; Full path of temperature sysfs path
; Use `sensors` to find preferred temperature source, then run
; $ for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
; to find path to desired file
; Default reverts to thermal zone setting
hwmon-path = /sys/devices/platform/coretemp.0/hwmon/hwmon2/temp1_input

; Threshold temperature to display warning label (in degrees celsius)
; Default: 80
warn-temperature = 60

; Whether or not to show units next to the temperature tokens (°C, °F)
; Default: true
units = false

; Available tags:
;   <label> (default)
;   <ramp>
format = <ramp> <label>

; Available tags:
;   <label-warn> (default)
;   <ramp>
format-warn = <ramp> <label-warn>

; Available tokens:
;   %temperature% (default, in °C)
;   %temperature-c%   (temperature, in °C)
;   %temperature-f%   (temperature, in °F)
label = TEMP %temperature%

; Available tokens:
;   %temperature% (default, in °C)
;   %temperature-c%   (temperature, in °C)
;   %temperature-f%   (temperature, in °F)
label-warn = TEMP %temperature%
label-warn-foreground = #f00

[module/cpu]
type = internal/cpu
interval = 0.5
format = <label> <ramp-coreload>
label = CPU

ramp-coreload-0 = ▁
ramp-coreload-0-font = 2
ramp-coreload-0-foreground = #aaff77
ramp-coreload-1 = ▂
ramp-coreload-1-font = 2
ramp-coreload-1-foreground = #aaff77
ramp-coreload-2 = ▃
ramp-coreload-2-font = 2
ramp-coreload-2-foreground = #aaff77
ramp-coreload-3 = ▄
ramp-coreload-3-font = 2
ramp-coreload-3-foreground = #aaff77
ramp-coreload-4 = ▅
ramp-coreload-4-font = 2
ramp-coreload-4-foreground = #fba922
ramp-coreload-5 = ▆
ramp-coreload-5-font = 2
ramp-coreload-5-foreground = #fba922
ramp-coreload-6 = ▇
ramp-coreload-6-font = 2
ramp-coreload-6-foreground = #ff5555
ramp-coreload-7 = █
ramp-coreload-7-font = 2
ramp-coreload-7-foreground = #ff5555


[module/date]
type = internal/date
date = %%{F#fff}%A, %d %B %Y  %%{F#fff}%I:%M%%{F#666}:%%{F#fba922}%S%%{F-}
date-alt =    %%{F#99}%Y-%m-%d%%{F-}  %%{F#fff}%H:%M%%{F-}


[module/memory]
type = internal/memory
format = <label> <bar-used>
label = RAM

bar-used-width = 10
bar-used-foreground-0 = #aaff77
bar-used-foreground-1 = #aaff77
bar-used-foreground-2 = #fba922
bar-used-foreground-3 = #ff5555
bar-used-indicator = |
bar-used-indicator-font = 6
bar-used-indicator-foreground = #ff
bar-used-fill = ─
bar-used-fill-font = 6
bar-used-empty = ─
bar-used-empty-font = 6
bar-used-empty-foreground = #444444


[module/spotify]
type = custom/script
; all of this could of course be put in a single script... or just move the piping to the spotify script
exec =  ~/.config/i3/spoty.sh %artist% - %title% | while read -r status; do echo $status; done
; tail since scroller will output continuously
tail = true
; when the script has ended, wait this time and then launch it again
interval = 10


[module/wired-network]
type = internal/network
interface = enp102s0
interval = 10.0

label-connected =    %{T3}%local_ip%%{T-}
label-disconnected-foreground = #66

[module/wireless-network]
type = internal/network
interface = wlp26s0
interval = 10.0

label-connected = %essid% %downspeed:9% %upspeed:9%
label-connected-foreground = #eefafafa
label-disconnected = not connected
label-disconnected-foreground = #66ffffff

; Test connectivity every Nth update
; A value of 0 disables the feature
; NOTE: Experimental (needs more testing)
; Default: 0
;ping-interval = 3

; @deprecated: Define min width using token specifiers (%downspeed:min% and %upspeed:min%)
; Minimum output width of upload/download rate
; Default: 3
udspeed-minwidth = 5

; Accumulate values from all interfaces
; when querying for up/downspeed rate
; Default: false
accumulate-stats = true

; Consider an `UNKNOWN` interface state as up.
; Some devices have an unknown state, even when they're running
; Default: false
unknown-as-up = true


[module/volume]
type = internal/volume

format-volume = <label-volume> <bar-volume>
label-volume = VOL
label-volume-foreground = ${root.foreground}

format-muted-prefix = " "
format-muted-foreground = #444444
label-muted = sound muted

bar-volume-width = 10
bar-volume-foreground-0 = #55aa55
bar-volume-foreground-1 = #55aa55
bar-volume-foreground-2 = #55aa55
bar-volume-foreground-3 = #55aa55
bar-volume-foreground-4 = #55aa55
bar-volume-foreground-5 = #f5a70a
bar-volume-foreground-6 = #ff5555
bar-volume-gradient = false
bar-volume-indicator = |
bar-volume-indicator-font = 2
bar-volume-fill = ─
bar-volume-fill-font = 2
bar-volume-empty = ─
bar-volume-empty-font = 2
bar-volume-empty-foreground = #444444


[module/powermenu]
type = custom/menu
expand-right = true
format-spacing = 1

label-open = 
label-close = 

label-separator = |
label-separator-foreground = #00000000

menu-0-0 = reboot
menu-0-0-exec = menu-open-1
menu-0-1 = power off
menu-0-1-exec = menu-open-2

menu-1-0 = cancel
menu-1-0-exec = menu-open-0
menu-1-1 = reboot
menu-1-1-exec = reboot

menu-2-0 = power off
menu-2-0-exec = poweroff
menu-2-1 = cancel
menu-2-1-exec = menu-open-0 


[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
full-at = 99

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT0
adapter = ADP1

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = 5


[module/clock]
type = internal/date
interval = 2
date = %%{F#999}%Y-%m-%d%%{F-}  %%{F#fff}%H:%M%%{F-}

; vim:ft=dosini
